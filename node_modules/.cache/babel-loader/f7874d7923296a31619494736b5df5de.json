{"ast":null,"code":"import*as actionType from\"./types\";import*as AuthService from\"../components/services/auth.service\";// register action\nexport var registerAction=function registerAction(payload){return function(dispatch){return AuthService.register(payload).then(function(response){dispatch({type:actionType.REGISTER_SUCCESS,payload:response.data});return Promise.resolve(response.data);}).catch(function(error){dispatch({type:actionType.REGISTER_FAIL,payload:{err:error.message||\"Registration Failed\"}});return Promise.reject(error);});};};// login action\nexport var loginAction=function loginAction(userCredential){return function(dispatch){return AuthService.login(userCredential).then(function(data){dispatch({type:actionType.LOGIN_SUCCESS,payload:data});return Promise.resolve(data);}).catch(function(error){dispatch({type:actionType.REGISTER_FAIL,payload:{err:error.message||\"Registration Failed\"}});return Promise.reject(error);});};};// logout action\nexport var logoutAction=function logoutAction(){return function(dispatch){var msg=AuthService.logout();dispatch({type:actionType.LOGOUT,payload:{msg:msg}});return Promise.resolve(msg);};};","map":{"version":3,"sources":["D:/login_system/src/container/actions.js"],"names":["actionType","AuthService","registerAction","payload","dispatch","register","then","response","type","REGISTER_SUCCESS","data","Promise","resolve","catch","error","REGISTER_FAIL","err","message","reject","loginAction","userCredential","login","LOGIN_SUCCESS","logoutAction","msg","logout","LOGOUT"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,UAAZ,KAA4B,SAA5B,CACA,MAAO,GAAKC,CAAAA,WAAZ,KAA6B,qCAA7B,CAEA;AACA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,OAAD,QAAa,UAACC,QAAD,CAAc,CACvD,MAAOH,CAAAA,WAAW,CAACI,QAAZ,CAAqBF,OAArB,EACJG,IADI,CACC,SAACC,QAAD,CAAc,CAClBH,QAAQ,CAAC,CACPI,IAAI,CAAER,UAAU,CAACS,gBADV,CAEPN,OAAO,CAAEI,QAAQ,CAACG,IAFX,CAAD,CAAR,CAKA,MAAOC,CAAAA,OAAO,CAACC,OAAR,CAAgBL,QAAQ,CAACG,IAAzB,CAAP,CACD,CARI,EASJG,KATI,CASE,SAACC,KAAD,CAAW,CAChBV,QAAQ,CAAC,CACPI,IAAI,CAAER,UAAU,CAACe,aADV,CAEPZ,OAAO,CAAE,CAAEa,GAAG,CAAEF,KAAK,CAACG,OAAN,EAAiB,qBAAxB,CAFF,CAAD,CAAR,CAKA,MAAON,CAAAA,OAAO,CAACO,MAAR,CAAeJ,KAAf,CAAP,CACD,CAhBI,CAAP,CAiBD,CAlB6B,EAAvB,CAoBP;AACA,MAAO,IAAMK,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,cAAD,QAAoB,UAAChB,QAAD,CAAc,CAC3D,MAAOH,CAAAA,WAAW,CAACoB,KAAZ,CAAkBD,cAAlB,EACJd,IADI,CACC,SAACI,IAAD,CAAU,CACdN,QAAQ,CAAC,CACPI,IAAI,CAAER,UAAU,CAACsB,aADV,CAEPnB,OAAO,CAAEO,IAFF,CAAD,CAAR,CAIA,MAAOC,CAAAA,OAAO,CAACC,OAAR,CAAgBF,IAAhB,CAAP,CACD,CAPI,EAQJG,KARI,CAQE,SAACC,KAAD,CAAW,CAChBV,QAAQ,CAAC,CACPI,IAAI,CAAER,UAAU,CAACe,aADV,CAEPZ,OAAO,CAAE,CAAEa,GAAG,CAAEF,KAAK,CAACG,OAAN,EAAiB,qBAAxB,CAFF,CAAD,CAAR,CAKA,MAAON,CAAAA,OAAO,CAACO,MAAR,CAAeJ,KAAf,CAAP,CACD,CAfI,CAAP,CAgBD,CAjB0B,EAApB,CAmBP;AACA,MAAO,IAAMS,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,SAAM,UAACnB,QAAD,CAAc,CAC9C,GAAMoB,CAAAA,GAAG,CAAGvB,WAAW,CAACwB,MAAZ,EAAZ,CAEArB,QAAQ,CAAC,CACPI,IAAI,CAAER,UAAU,CAAC0B,MADV,CAEPvB,OAAO,CAAE,CAAEqB,GAAG,CAAHA,GAAF,CAFF,CAAD,CAAR,CAKA,MAAOb,CAAAA,OAAO,CAACC,OAAR,CAAgBY,GAAhB,CAAP,CACD,CAT2B,EAArB","sourcesContent":["import * as actionType from \"./types\";\r\nimport * as AuthService from \"../components/services/auth.service\";\r\n\r\n// register action\r\nexport const registerAction = (payload) => (dispatch) => {\r\n  return AuthService.register(payload)\r\n    .then((response) => {\r\n      dispatch({\r\n        type: actionType.REGISTER_SUCCESS,\r\n        payload: response.data,\r\n      });\r\n\r\n      return Promise.resolve(response.data);\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: actionType.REGISTER_FAIL,\r\n        payload: { err: error.message || \"Registration Failed\" },\r\n      });\r\n\r\n      return Promise.reject(error);\r\n    });\r\n};\r\n\r\n// login action\r\nexport const loginAction = (userCredential) => (dispatch) => {\r\n  return AuthService.login(userCredential)\r\n    .then((data) => {\r\n      dispatch({\r\n        type: actionType.LOGIN_SUCCESS,\r\n        payload: data,\r\n      });\r\n      return Promise.resolve(data);\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: actionType.REGISTER_FAIL,\r\n        payload: { err: error.message || \"Registration Failed\" },\r\n      });\r\n\r\n      return Promise.reject(error);\r\n    });\r\n};\r\n\r\n// logout action\r\nexport const logoutAction = () => (dispatch) => {\r\n  const msg = AuthService.logout();\r\n\r\n  dispatch({\r\n    type: actionType.LOGOUT,\r\n    payload: { msg },\r\n  });\r\n\r\n  return Promise.resolve(msg);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}